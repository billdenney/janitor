% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/compare_df_types.R
\name{compare_df_types}
\alias{compare_df_types}
\title{Generate a comparison of data.frames (or similar objects) that indicates if
they will successfully bind together by rows.}
\usage{
compare_df_types(..., return = c("all", "match", "mismatch"),
  bind_check = c("rbind", "bind_rows"))
}
\arguments{
\item{...}{data.frames or similar objects (such as tibbles), or lists of
data.frames (or similar objects).  The values may optionally be named
arguments; if named, the output column will be the name; if not named, the
output columne will be the data.frame name (see examples section).}

\item{return}{Should a summary of "all" columns be returned, only return
"match"ing columns, or only "mismatch"ing columns?}

\item{bind_check}{What method of binding should be used to determine matches?
With "rbind", columns missing from a data.frame would be considered a
mismatch (as in \code{base::rbind()}; with "bind_rows", columns missing
from a data.frame would be considered a match (as in
\code{dplyr::bind_rows()}.}
}
\value{
A data.frame with a column named "column_name" with a value named
  after the input data.frames' column names, and then one column per
  data.frame (named after the input data.frame).  If more than one input
  would have the same column name, the column naming is from
  \code{base::merge()} and may differ from expected naming.  The rows within
  the data.frame-named columns are descriptions of the classes of the data
  within the columns (generated by \code{compare_df_types_class_detect}).
}
\description{
Generate a comparison of data.frames (or similar objects) that indicates if
they will successfully bind together by rows.
}
\details{
Due to the returned "column_name" column, no input data.frame may be
  named "column_name".
}
\examples{
compare_df_types(data.frame(A=1), data.frame(B=2))
# user-defined names
compare_df_types(dfA=data.frame(A=1), dfB=data.frame(B=2))
# a combinatino of list and data.frame input
compare_df_types(listA=list(dfA=data.frame(A=1), dfB=data.frame(B=2)), data.frame(A=3))
}
\seealso{
Other Data frame type comparison: \code{\link{compare_df_types_class_detect}},
  \code{\link{compare_df_types_success}}
}
\concept{Data frame type comparison}
